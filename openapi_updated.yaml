openapi: 3.0.3
info:
  title: Swagger Accounts - OpenAPI 3.0
  description: |-
    User Account services
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: http://localhost/api/v1
tags:
  - name: Account
    description: User Account
    externalDocs:
      description: Find out more
      url: http://swagger.io
paths:
  /accounts:
    put:
      tags:
        - Account
      summary: Update an existing account
      description: Update an existing account
      operationId: updateAccount
      requestBody:
        description: Update an existent account in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateAccount'
          application/xml:
            schema:
              $ref: '#/components/schemas/updateAccount'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/updateAccount'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/updateAccount'          
            application/xml:
              schema:
                $ref: '#/components/schemas/updateAccount'
        '400':
          description: Invalid ID supplied
        '404':
          description: Account not found
        '405':
          description: Validation exception
    post:
      tags:
        - Account
      summary: Create an account
      description: Create an account
      operationId: createAccount
      requestBody:
        description: Create an account
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createAccount'
          application/xml:
            schema:
              $ref: '#/components/schemas/createAccount'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/createAccount'
        required: true
      responses:
        '201':
          description: Account created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/putAccount'          
        '400':
          description: Invalid details supplied
        '404':
          description: Account with same id found
        '405':
          description: Validation exception
  /{userId}:
    get:
      tags:
        - Account
      summary: Get an account
      description: Get an account
      operationId: getAccount
      parameters: 
        - name: userId
          in: path
          description: ID for user account to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAccount'          
            application/xml:
              schema:
                $ref: '#/components/schemas/getAccount'
        '400':
          description: Invalid details supplied
        '404':
          description: Account with same id found
        '405':
          description: Validation exception
    delete:
      tags:
        - Account
      summary: Delete an account
      description: Delete an account
      operationId: deleteAccount
      parameters: 
        - name: userId
          in: path
          description: ID for user account to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deleteAccount'          
            application/xml:
              schema:
                $ref: '#/components/schemas/deleteAccount'
        '400':
          description: Invalid details supplied
        '404':
          description: Account not found
        '405':
          description: Validation exception
components:
  schemas:
    updateAccount:
      required:
        - id
        - name
        - emailid
        - phoneNumber
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: "Abdul"
        emailid:
          type: string
          example: "abdul@gmail.com"  
        phoneNumber:
          type: integer
          format: int64
          example: 10
        photoUrls:
          type: string
          example: url
      xml:
        name: updateAccount
    putAccount:
      required:
        - userId
      type: object
      properties:
        userId:
          type: integer
          example: 123
    createAccount:
      required:
        - username
        - password
        - name
        - emailid
        - phoneNumber
      type: object
      properties:
        username:
          type: string
          example: "Abdul123"
        password:
          type: string
          example: "Pass@123"
        name:
          type: string
          example: "Abdul"
        emailid:
          type: string
          example: "abdul@gmail.com"  
        phoneNumber:
          type: integer
          format: int64
          example: 104556
      xml:
        name: createAccount
    getAccount:
      required:
        - id
        - name
        - emailid
        - phoneNumber
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: "Abdul"
        emailid:
          type: string
          example: "abdul@gmail.com"  
        phoneNumber:
          type: integer
          format: int64
          example: 10
        photoUrls:
          type: string
          example: url
      xml:
        name: getAccount 
    deleteAccount:
      required:
        - userId
        - name
        - emailid
        - phoneNumber
      type: object
      properties:
        userId:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: "Abdul"
        emailid:
          type: string
          example: "abdul@gmail.com"  
        phoneNumber:
          type: integer
          format: int64
          example: 10
        photoUrls:
          type: string
          example: url
      xml:
        name: deleteAccount    
  requestBodies:
    Account:
      description: Pet object that needs to be added to the store
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/deleteAccount'
        application/xml:
          schema:
            $ref: '#/components/schemas/deleteAccount'
  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://petstore3.swagger.io/oauth/authorize
          scopes:
            write:pets: modify pets in your account
            read:pets: read your pets
    api_key:
      type: apiKey
      name: api_key
      in: header
